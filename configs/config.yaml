instruments:
  # intrument name = identifier
  # this is what is looked up by the add_instrument method of StationConfig


  lockin:
    # class of the instrument
    driver: qcodes.instrument_drivers.stanford_research.SR860
    type:
    # visa address
    address: ASRL4::INSTR
    # all following fields are optional:

    # if true any existing connection will be closed when instatiated
    # default (if left out) is false
    auto_reconnect: true

    # constant arguments passed to the init function
    # init:

     # new parameters, that get created and attached to the instrument
    # new_parameter:
      # ex: DC current
      DC:
        # source specifies which getter and setter should be used
        source: # e.g channel
        # label and unit change these attributes of the parameter
        label:
        unit: #
        limits:
        monitor: true
#
# Setting up existing parameters e.g creating aliases:

parameters:
  ch01.v: {alias: gate1, label: cutter right}

# Set up simulated instrument:
# file Agilent_34400A.yaml with specs has to exist
# dmm1:
#     driver: qcodes.instrument_drivers.agilent.Agilent_34400A
#     type: Agilent_34400A
#     auto_reconnect: true
#     address: GPIB::1::65535::INSTR
#     init:
#       visalib: 'Agilent_34400A.yaml@sim'
#     parameters:
#       volt: {monitor: true}

 # note the different path for the driver
  mock_dac:
    driver: qcodes.tests.instrument_mocks
    type: DummyInstrument
    auto_reconnect: true
    init:
      # to pass an array as a parameter use {}
      gates: {"ch1", "ch2"}