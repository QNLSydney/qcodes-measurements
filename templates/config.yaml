# list of instruments instances, i.e. there are two entries for
# two instruments of the same type
instruments:
  # intrument name = identifier
  # this is what is looked up by the add_instrument method of ExperimentXXX
  qdac-real:
    # class of the instrument
    driver: qcodes.instrument_drivers.QDev.QDac_channels
    type: QDac
    # visa address
    address: ASRL4::INSTR
    # constant arguments passed to the init function [optional]
    init:
      terminator: \n
      update_currents: false
    # new parameters, that get created and attached to the instrument
    new_parameters:
    # for example, here we define a DAC channel used for driving a
    # magnetic field.
      Bx: # name of the new parameter eg myDac.Bx(0.1) to set the parameter
        # source specifies which getter and setter should be used
        source: ch02.v
        # label and unit change these attributes of the parameter
        label: Magnetic Field X-Component
        mdac
        scale: 28
        delay: 0
        step: 0.01
        inter_delay: 0.01
        # if given like this the limits specify the validator as Numbers(-1,1)
        limits: -1,1
        # monitor is a boolean field that shows weather this parameter
        # should appear in the monitor
        monitor: true
    # parameter specific settings [optional]
    parameters:
    # for every parameter one can define a number of options
    # here we define an alias for a channel. With an alias the paramater
    # becomes accessible under another name so that you can write:
    # instr.mygate(0.2) and v = instr.mygate()
    # the parameter does not get copied however so that insr.ch01.v == instr.mygate
    # note that dot notation can be used to specify parameters in
    # (sub)channels
      ch01.v:
        alias: mygate
      # as in all yaml files you can use a one-line notation
      ch03.v: {alias: Q1lplg1, label: label}
  # more example instruments:
  qdac-sim:
    driver: qcodes.instrument_drivers.QDev.QDac_channels
    type: QDac
    address: GPIB::2::65535::INSTR
    init:
      visalib: 'qdac.yaml@sim'
  dmm1:
    driver: qcodes.instrument_drivers.agilent.Agilent_34400A
    type: Agilent_34400A
    address: GPIB::1::65535::INSTR
    init:
      visalib: 'Agilent_34400A.yaml@sim'
  qdac-sim:
    driver: qcodes.instrument_drivers.QDev.QDac_channels
    type: QDac
    address: GPIB::2::65535::INSTR
    init:
      visalib: 'qdac.yaml@sim'
  dmm2:
    type: Agilent_34400A
    address: GPIB0::8::INSTR
  lockin_2:
    type: SR830_ext
    address: GPIB0::8::INSTR
    # with the settings you can provide additional settings
    # that can be used by the extended instruments
    settings:
      iv_gain: 1e8
      ac_factor: 1e5
      dc_factor: 1e5

# Settings per intrument type vs. per instance
intrument_types:
  # class name of the instrument
  QDAC:
    # key word list for initializing the instrument
    init:
      terminator: \n
    aliases:
    attributes:
    settings:
